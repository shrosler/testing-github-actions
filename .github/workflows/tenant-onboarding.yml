# This is a basic workflow that is manually triggered

name: tenant-onboaring

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'customer name'
        default: 'DevOps Internal'
        required: true

jobs:
#   tenant-deployment:
#     environment: dev
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Tenant Deployment
#       run: echo "Tenant for customer was ${{ github.event.inputs.name }} Deployed"   
      
#   execute-cloud-test:
#     needs: tenant-deployment
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Execute Cloud Tests
#       run: echo "Cloud tests passed successfully"
      
#   cleanup-resources:
#     needs: execute-cloud-test
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Execute Cloud Tests
#       run: echo 'Resources were cleaned-up successfully'

  Development:
    environment: dev
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Tenant Deployment
      run: echo "Tenant for customer was ${{ github.event.inputs.name }} Deployed"   
    - name: Execute Cloud Tests
      run: echo "Cloud tests passed successfully"
    - name: Cleanup Resources
      run: echo 'Resources were cleaned-up successfully'
      
  Integration:
    needs: Development
    environment: int
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Tenant Deployment
      run: echo "Tenant for customer was ${{ github.event.inputs.name }} Deployed"   
    - name: Execute Cloud Tests
      run: echo "Cloud tests passed successfully"
    - name: Cleanup Resources
      run: echo 'Resources were cleaned-up successfully'

  Staging:
    needs: Integration
    environment: stg
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Tenant Deployment
      run: echo "Tenant for customer was ${{ github.event.inputs.name }} Deployed"   
    - name: Execute Cloud Tests
      run: echo "Cloud tests passed successfully"
    - name: Cleanup Resources
      run: echo 'Resources were cleaned-up successfully'









